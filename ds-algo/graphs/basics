- Set of vertices(nodes) that are connected to each other via edges in the form of a network.
- Connects to multiple nodes
- G(V,E)

There are two common types of graphs:
--------------------------------------
1) Undirected graph:
--------------------
- degree(v) = number of edges going through it
- sum of degree = 2 * |E|
- Max number of edges = [|v|*(|v|-1)] /2

2)Directed graph:
-----------------
indegree(v) = number of edges coming in to that vertex
outdegree(v) = number of edges going out of that vertex
sum of indegrees = |E|
sum of outdegrees = |E|
Max number of edges = |v|*|v-1|


Terminologies in a graph:
-------------------------

3) Bridges in a graph:
----------------------
- It is an edge which when removed increases the number of components.

4) Adjacency matrix:
---------------------
- For undirected graph, it is a symnetric matrix
- For directed graph, you mark 1 for outgoing edges and imcoming it is 0.
- Requires : Theta(vxv) space
- Find all vertices adjacent to u and degree of vertex, both take theta(v) time
- Add or remove an edge: theta(1) time
- Add or remove a vertex: theta(v^2) time

5)Adjacency list:
-----------------
- It is an array of list and list representations are: a) dynamic sized arrays (they have cache friendliness) b) Linked list
- space theta(V+E) for directed and theta(V+2*E) for undirected.
- Add edge: Theta(1)
- Remove edge: Theta(v)
- Find degree of u : theta(1)
- Find all adjacent of u : theta(degree(u))
- Check if there is an edge from u to v -> (O(v))
- You can find nodes that are adjacent to a given vertex in O(1) time complexity.
